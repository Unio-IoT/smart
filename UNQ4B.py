#!/bin/python3
import os
import pathlib
import subprocess
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BCM)

print ("Login Script")
my_set = ["L8pItpV6OQ2680UNQ4B","ZIuUHMQd912681UNQ4B","Fx6tNERmJi2682UNQ4B","rwRYG2507D2683UNQ4B","x28m4LU6HF2684UNQ4B","ToQodDPJTr2685UNQ4B","LgadSXn0kZ2686UNQ4B","TE55YVGE0S2687UNQ4B","zzbW1TKiKk2688UNQ4B","KgyT4leaO62689UNQ4B","WEssNqhV062690UNQ4B","qMt6RJiN3w2691UNQ4B","7wiCfTLF6L2692UNQ4B","CC1sX7T4MB2693UNQ4B","Cgaf8odFIf2694UNQ4B","H4kVyXw3u52695UNQ4B","RELzd6G2wq2696UNQ4B","oz1YL2PuH92697UNQ4B","XhJv2L1yRz2698UNQ4B","SOIspDIM3o2699UNQ4B","JwAyTFfDLI2700UNQ4B","LeKy9ySIe62701UNQ4B","8TwCOuDf7z2702UNQ4B","nBugKnojIN2703UNQ4B","PoEpJTnX0N2704UNQ4B","2RkoJxlCEq2705UNQ4B","sC2smWcprc2706UNQ4B","3ZCaPEw1jz2707UNQ4B","04iwVA0ozq2708UNQ4B","JYMv24onQT2709UNQ4B","32ySCX47R62710UNQ4B","dzRzLaEkgO2711UNQ4B","kBOfrfZTkb2712UNQ4B","bE6ZnTgEdx2713UNQ4B","krESISlR4E2714UNQ4B","ovoBdIjqqv2715UNQ4B","UW0uaYTIga2716UNQ4B","5uzCYBuqPQ2717UNQ4B","Uqu2uymGKm2718UNQ4B","RPVFscidPC2719UNQ4B","DxKH8lKaSo2720UNQ4B","XdWvYXH4Vk2721UNQ4B","mbksqKxTrl2722UNQ4B","gYQgfzgO1p2723UNQ4B","w2JkZ8odON2724UNQ4B","LaYIIAMdfq2725UNQ4B","qhpOqiPxRs2726UNQ4B","2C9hTI6W0M2727UNQ4B","tBKkg6A1pp2728UNQ4B","lbfHXRPgpL2729UNQ4B","tGBUdL7RRC2730UNQ4B","2oRZvPk2E12731UNQ4B","yoTB4KrAL82732UNQ4B","zRDgzHY9m52733UNQ4B","oNMZ5eAO6D2734UNQ4B","jB6S3PZm3P2735UNQ4B","aXFzTyFMJA2736UNQ4B","oW2TC99Deq2737UNQ4B","azc9ZPzKQA2738UNQ4B","dUqX4oeDKY2739UNQ4B","vfCD8sm45A2740UNQ4B","INxLciCcvF2741UNQ4B","CU5pQ7fzwE2742UNQ4B","GtKN8oXpTm2743UNQ4B","XhOr8jWiKh2744UNQ4B","D7njv8JchC2745UNQ4B","K1wdhFLHvy2746UNQ4B","l3zXRapK4Q2747UNQ4B","dcf8ydCUTE2748UNQ4B","1bLejJ1GQQ2749UNQ4B","kJdo0nVTuf2750UNQ4B","Ey10V083VU2751UNQ4B","bEdIDss7gk2752UNQ4B","HFxGgoVdLN2753UNQ4B","1dO2lrlKC52754UNQ4B","XZm4XShARS2755UNQ4B","E7yjn7COea2756UNQ4B","jVQ5jew2cV2757UNQ4B","2EPz6t5sqp2758UNQ4B","bZyS9BgQ0a2759UNQ4B","N26YIg8ifP2760UNQ4B","Me76p23Q1v2761UNQ4B","0PvMPnPDGx2762UNQ4B","sBWTQrhoya2763UNQ4B","vzHeZ203rY2764UNQ4B","Ds8YF9RqhA2765UNQ4B","AP6wzAmc6N2766UNQ4B","y344RlmHod2767UNQ4B","W0yQ0c9Ayt2768UNQ4B","PmOT4ge2L82769UNQ4B","gnWtsOXI2i2770UNQ4B","OHvXEiwmPG2771UNQ4B","t6yNoJQ4K92772UNQ4B","CCpjHjg3Z42773UNQ4B","8tG3qNfqPq2774UNQ4B","qQS1fmhz8Y2775UNQ4B","glMDMsQyNt2776UNQ4B","Fy5pZvZcHw2777UNQ4B","bDWt0CHw1p2778UNQ4B","fAECanoQXk2779UNQ4B","ABsrbLEkWZ2780UNQ4B","KW2HP7Mc8F2781UNQ4B","oDV3dmF3Ck2782UNQ4B","D18BWMBQJJ2783UNQ4B","VVa05kpW3q2784UNQ4B","AV7mM4pRwJ2785UNQ4B","AgMa7qcx0f2786UNQ4B","Fd8Hvgk1Ka2787UNQ4B","68tm0EtPq22788UNQ4B","8zoXo7zizh2789UNQ4B","W7xq645ZKD2790UNQ4B","qdfoXyalX32791UNQ4B","Mn2ziiOn7t2792UNQ4B","idCMhLNWqQ2793UNQ4B","x9dsCdmLty2794UNQ4B","SmpBnUw6fT2795UNQ4B","ywk7Zli5el2796UNQ4B","BOFPubuQQY2797UNQ4B","DbH9h1rSrI2798UNQ4B","hm9hvekz0f2799UNQ4B","Ze2Oftsj0g2800UNQ4B","aqwLwBgoDs2801UNQ4B","yt35IAkl5s2802UNQ4B","bB7UN3sEr32803UNQ4B","wGhYWYW9R92804UNQ4B","mBj3QuAUCx2805UNQ4B","NdQg2VWbQF2806UNQ4B","mDhFKeMc3J2807UNQ4B","fGU1mG2Kwx2808UNQ4B","BP5kjlAxw92809UNQ4B","8FHAbHmfYY2810UNQ4B","JOvc3JYiYW2811UNQ4B","qqBQGtYHQV2812UNQ4B","i4BRnGUTnb2813UNQ4B","l8HxffB10E2814UNQ4B","IycnHPHHd02815UNQ4B","vTnTnzIL6f2816UNQ4B","noVqh5HXIY2817UNQ4B","SihE29az2Q2818UNQ4B","Y5Bq40jxne2819UNQ4B","DapvIHGbqD2820UNQ4B","gBxftoDEe62821UNQ4B","bJPNsVh23C2822UNQ4B","8CNupJRTsH2823UNQ4B","fzhAzXeTfm2824UNQ4B","YhqpLIcooi2825UNQ4B","4lX4pnPr342826UNQ4B","9AHgWiMUtc2827UNQ4B","Ef5ZcqPFSU2828UNQ4B","UsX8LbFGMf2829UNQ4B","QAweXm2xmE2830UNQ4B","pNf012hbK22831UNQ4B","AP8IYwmVGv2832UNQ4B","YQQsrHcGy52833UNQ4B","N2HXDJQsCn2834UNQ4B","QkQuCtTFw82835UNQ4B","zfL6MySZa52836UNQ4B","NfH7W6MCiW2837UNQ4B","mZOpq5Qq4k2838UNQ4B","vhyJYHMbEY2839UNQ4B","nBiAU9JLlX2840UNQ4B","iSOYPC5i5Y2841UNQ4B","LuevJqsck52842UNQ4B","nIj87a053Z2843UNQ4B","v5QSgmyaRt2844UNQ4B","GX3YWU4l9R2845UNQ4B","JAFrntLhS22846UNQ4B","Z7ge9mC6vR2847UNQ4B","WUkU0XzoDT2848UNQ4B","qvvzhonasc2849UNQ4B","zuafHCiZkS2850UNQ4B","UgkbejHct22851UNQ4B","Yb4i20CRYb2852UNQ4B","CYE6DLIVWX2853UNQ4B","eOQc810i1j2854UNQ4B","qKqTzVFHCM2855UNQ4B","OOWfY2enwL2856UNQ4B","UungIvYLEM2857UNQ4B","2pzxz7Tzmo2858UNQ4B","jZqp1INwit2859UNQ4B","YsNxk3ZIWx2860UNQ4B","iIpbPnCmS92861UNQ4B","uyprQCNeUZ2862UNQ4B","rtseEcflwR2863UNQ4B","IxYRFDJjvP2864UNQ4B","c9EvC8Bvii2865UNQ4B","ppx8eyJL0F2866UNQ4B","mVKJ3Hc0i32867UNQ4B","WkPPEFdzWf2868UNQ4B","JIvC2OKCIg2869UNQ4B","ez40EOFtK82870UNQ4B","A0OmlSfoLm2871UNQ4B","k6MwWq5QxT2872UNQ4B","JKw7F3r1yW2873UNQ4B","72Rx6Kffp62874UNQ4B","CBuMHcMnx62875UNQ4B","T5XA7jMJIt2876UNQ4B","VCW0aonHgS2877UNQ4B","FomMf7Z7bV2878UNQ4B","pO8urJKMej2879UNQ4B","tYEPFaZgbi2880UNQ4B"]
my_file = pathlib.Path("mycode.unio")
if my_file.exists():  
     fh = open("mycode.unio","r+")
     content = fh.read()
     fh.close()
     #print("file exist")
     if (content in my_set):
            #print ("Registered successfully as " + content)
            GPIO.setup(18, GPIO.IN, pull_up_down=GPIO.PUD_UP)
            # wait for the pin to be sorted with GND and, if so, halt the system
           # print ("waiting for the falling edge")
            GPIO.wait_for_edge(18, GPIO.FALLING)
            subprocess.call(['shutdown -h now "System halted by power switch "'], shell=True)
            # clean up GPIO on normal exit
            GPIO.cleanup()
else:
    fh = open("mycode.unio","w+")
    content = raw_input("Please enter registration code : ")
    fh.write(content)
    fh.close()

